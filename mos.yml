author: mongoose-os
description: A Mongoose OS app skeleton
version: 1.15
#2.19.1
#${mos.version}
libs_version: 2.19.1
modules_version: 2.19.1
mongoose_os_version: 2.19.1

# Optional. List of tags for online search.
tags:
  - js

# List of files / directories with C sources. No slashes at the end of dir names.
sources:
  - src

# List of dirs. Files from these dirs will be copied to the device filesystem
filesystem:
  - fs

# Custom configuration entries, settable via "device configuration"
# Below is a custom firmware configuration example.
# Uncomment and modify according to your needs:
config_schema:
# - ["app", "o", {title: "My app custom settings"}]
# - ["app.pin", "i", 14, {title: "GPIO pin a sensor is attached to"}]
# config_schema:
#  - ["my_app", "o", {title: "My app custom settings"}]
#  - ["my_app.bool_value", "b", false, {title: "Some boolean value"}]
#  - ["my_app.string_value", "s", "", {title: "Some string value"}]
#  - ["my_app.int_value", "i", 123, {title: "Some integer value"}]

# These settings get compiled into the C structure, and can be accessed
# from the C code this way:
#
# printf("Hello from %s!\n", mgos_sys_config_get_device_id());
#
# Settings are cool: can be modified remotely without full firmware upgrade!
#
# To see all available compiled settings, buid the firmware and open
# build/gen/mgos_config.h file.
#
# Also, in this config_schema section, you can override existing
# settings that has been created by other libraries. For example, debug log
# level is 2 by default. For this firmware we can override it to 3:
#
# config_schema:
#  - ["debug.level", 3]

libs:
  - origin: https://github.com/mongoose-os-libs/bt-common
  #  version: 2.19.1
  - origin: https://github.com/mongoose-os-libs/rpc-common
  - origin: https://github.com/mongoose-os-libs/rpc-loopback
  - origin: https://github.com/mongoose-os-libs/rpc-service-config
  - origin: https://github.com/mongoose-os-libs/rpc-service-fs
  - origin: https://github.com/mongoose-os-libs/rpc-uart
  - origin: https://github.com/mongoose-os-libs/wifi
  - origin: https://github.com/mongoose-os-libs/mjs
  - origin: https://github.com/mongoose-os-libs/arduino-onewire
  - origin: https://github.com/mongoose-os-libs/core
  - origin: https://github.com/mongoose-os-libs/pwm
  - origin: https://github.com/mongoose-os-libs/boards
  - origin: https://github.com/mongoose-os-libs/ota-http-server
  - origin: https://github.com/mongoose-os-libs/i2c
config_schema:
  # bt:
  - ["bt.random_address", false] # Настройки bluetooth
  - ["bt.keep_enabled", true]
  - ["bt.dev_name", "volzhanin_??????"]
  - ["wifi.ap.enable", false]
  - ["wifi.ap.ssid", "volzhanin_??????"]
  - ["wifi.ap.pass", ""]
  - ["i2c.enable", true]
  - ["debug.level", 2 ]
  - ["sensors.p_out_min", "i", 0, {title: "Minimum OUT Pressure"}]
  - ["sensors.p_out_max", "i", 60, {title: "Maximum OUT Pressure"}]
  - ["sensors.p_in_min", "i", 4, {title: "Minimum IN Pressure signal"}]
  - ["sensors.p_in_max", "i", 20, {title: "Maximum IN Pressure signal"}]
  - ["serialnumber", "s", "123456789", {title: "Serial number"}]

  #- ["wifi.sta.enable", true]
  #- ["wifi.sta.ssid", "ASUS"]
  #- ["wifi.sta.pass", "bmns1xA8"]
build_vars:
  # enable 16MB flash size + PSRAM
 # ESP_IDF_SDKCONFIG_OPTS: >
  #  ${build_vars.ESP_IDF_SDKCONFIG_OPTS} 
   #   CONFIG_ESPTOOLPY_FLASHSIZE_4MB=y
    #  CONFIG_ESPTOOLPY_FLASHSIZE_16MB
    # CONFIG_ESPTOOLPY_FLASHSIZE=16MB
    #  CONFIG_SPIRAM_SUPPORT=y
    #  CONFIG_SPIRAM_BOOT_INIT=y
    #  CONFIG_SPIRAM_CACHE_WORKAROUND=y
    #  CONFIG_SPI_MASTER_IN_IRAM=y

# Used by the mos tool to catch mos binaries incompatible with this file format
manifest_version: 2020-08-02
